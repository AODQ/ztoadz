const vk = @import("../../../bindings/vulkan.zig");

pub const VulkanBaseDispatch = vk.BaseWrapper(&.{
  .createInstance,
});

pub const VulkanInstanceDispatch = vk.InstanceWrapper(&.{
  .createDevice,
  .getPhysicalDeviceFeatures2,
  .destroyInstance,
  .destroySurfaceKHR,
  .enumerateDeviceExtensionProperties,
  .enumeratePhysicalDevices,
  .getDeviceProcAddr,
  .getPhysicalDeviceMemoryProperties,
  .getPhysicalDeviceMemoryProperties2,
  .getPhysicalDeviceProperties,
  .getPhysicalDeviceProperties2,
  .getPhysicalDeviceQueueFamilyProperties,
  .getPhysicalDeviceSurfaceCapabilitiesKHR,
  .getPhysicalDeviceSurfaceFormatsKHR,
  .getPhysicalDeviceSurfacePresentModesKHR,
  .getPhysicalDeviceSurfaceSupportKHR,
});

pub const VulkanDeviceDispatch = vk.DeviceWrapper(&.{
  .acquireNextImageKHR,
  .allocateCommandBuffers,
  .allocateDescriptorSets ,
  .allocateMemory,
  .beginCommandBuffer,
  .bindBufferMemory,
  .bindImageMemory,
  .cmdBeginRenderPass,
  .cmdBindDescriptorSets ,
  .cmdBindPipeline,
  .cmdBindVertexBuffers,
  .cmdClearColorImage ,
  .cmdCopyBuffer2KHR,
  .cmdCopyBufferToImage2KHR,
  .cmdCopyImage2KHR ,
  .cmdBlitImage2KHR ,
  .cmdCopyImageToBuffer2KHR,
  .cmdDispatch,
  .cmdDispatchIndirect,
  .cmdDraw,
  .cmdEndRenderPass,
  .cmdFillBuffer,
  .cmdPipelineBarrier,
  .cmdPushConstants,
  .cmdSetScissor,
  .cmdSetViewport,
  .createBuffer,
  .createCommandPool,
  .createComputePipelines,
  .createDescriptorPool ,
  .createDescriptorSetLayout ,
  .createFence,
  .createFramebuffer,
  .createGraphicsPipelines,
  .createImage,
  .createImageView,
  .createPipelineLayout,
  .createQueryPool,
  .createRenderPass,
  .createSemaphore,
  .createShaderModule,
  .createSwapchainKHR,
  .destroyBuffer,
  .destroyCommandPool,
  .destroyDescriptorPool ,
  .destroyDescriptorSetLayout ,
  .destroyDevice,
  .destroyFence,
  .destroyFramebuffer,
  .destroyImage,
  .destroyImageView,
  .destroyPipeline,
  .destroyPipelineLayout,
  .destroyQueryPool,
  .destroyRenderPass,
  .destroySampler ,
  .destroySemaphore,
  .destroyShaderModule,
  .destroySwapchainKHR,
  .deviceWaitIdle,
  .endCommandBuffer,
  .freeCommandBuffers,
  .freeDescriptorSets ,
  .freeMemory,
  .getBufferDeviceAddress,
  .getBufferMemoryRequirements,
  .getBufferMemoryRequirements2 ,
  .getDeviceQueue,
  .getImageMemoryRequirements2,
  .getSwapchainImagesKHR,
  .invalidateMappedMemoryRanges,
  .mapMemory,
  .queuePresentKHR,
  .queueSubmit,
  .queueWaitIdle,
  .resetFences,
  .resetQueryPool,
  .setDebugUtilsObjectNameEXT,
  .unmapMemory,
  .updateDescriptorSets,
  .waitForFences,
});
